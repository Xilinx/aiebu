name: CMake Build

on:
  pull_request:
    types: [opened, synchronize]
    branches: main-ge

  workflow_dispatch:

# see binary-caching-github-actions-cache
env:
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout AIEBU
      uses: actions/checkout@v4
      with:
        submodules: recursive

    # See binary caching with github actions
    - name: Export GitHub Actions cache environment variables
      uses: actions/github-script@v7
      with:
        script: |
          core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
          core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

    - name: Install Dependencies (Linux) and configure CMake
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config libelf-dev libboost-dev
        cmake -B ${{github.workspace}}/build/Release -DAIEBU_FULL=OFF -DCMAKE_BUILD_TYPE=Release 

    - name: Install Dependencies (Windows) and configure CMake
      if: runner.os == 'Windows'
      run: |
        vcpkg integrate install
        vcpkg install boost-format boost-uuid boost-interprocess boost-algorithm boost-property-tree boost-headers --triplet=x64-windows
        cmake -B ${{github.workspace}}/build/Release -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake -DAIEBU_FULL=OFF -DCMAKE_BUILD_TYPE=Release 

    - name: Build
      run: |
        cmake --build ${{github.workspace}}/build/Release --config Release

    - name: Test (Linux)
      if: runner.os == 'Linux'
      run: |
        cmake --build ${{github.workspace}}/build/Release --config Release --target test

    - name: Test (Windows)
      if: runner.os == 'Windows'
      run: |
        cmake --build ${{github.workspace}}/build/Release --config Release --target run_tests
