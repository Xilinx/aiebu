name: XRT_aiebu-win_nightly

# Configures trigger:
# This workflow will be triggered on a pull request created for main branch
on:
  schedule:
    # Run workflow nightly at 5 AM UTC = 10 PM PST (DST)
    - cron: "0 5 * * *" 

  # Allow triggering this Action/Workflow manually from the Actions tab
  workflow_dispatch:

# Run workflows in concurrency.group sequentially
concurrency:
  group: xrt_aiebu_win_pipelines
  cancel-in-progress: true

jobs:
  Windows_Build_and_Test:
    runs-on: [xcoemgvm224003-XRT_aiebu]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Check Env Vars
        run: |
          echo "--> Check GITHUB Env Vars:"
          echo "    GITHUB_REPOSITORY=${{ github.REPOSITORY }}"
          echo "    GITHUB_EVENT_NAME=${{ github.EVENT_NAME }}"
          echo "    GITHUB_RUN_NUMBER=${{ github.RUN_NUMBER }}"
          echo "    GITHUB_WORKSPACE=${{ github.WORKSPACE }}"
          echo "    GITHUB_SHA=${{ github.SHA }}"
          echo "    GITHUB_REF=${{ github.REF }}"
      
      - name: Build
        run: |
          $RUNNER_HOSTNAME=hostname
          echo "--> Building win target on $RUNNER_HOSTNAME"
          cd ${{ github.WORKSPACE }}\build
          .\build22.bat
        # artifact (target: C:\scratch\XRT_aiebu\actions-runner\_work\aiebu\build\WRelease\AIEBU-0.1.1-win64.zip)
      
      - name: Upload Artifact to Artifactory
        run: |
          cd ${{ github.WORKSPACE }}\build\WRelease\
          dir AIEBU-*-win64.zip

          $DATE=Get-Date -format "yyyyMMdd"
          $BRANCH="${{ github.REF }}".split("/")[-1]
          
          $ARTIFACT_FILE=Get-ChildItem -Filter "AIEBU-*-win64.zip"
          $ARTIFACT_VERSION=($ARTIFACT_FILE[0].Name -split '-')[1]
          $ARTIFACT_SRC="AIEBU-$ARTIFACT_VERSION-win64-$DATE-${{ github.RUN_NUMBER }}.zip"
          $ARTIFACT_DEST="xrt-ipu-dev-local/$BRANCH/nightly/win/$DATE-${{ github.RUN_NUMBER }}/$ARTIFACT_SRC"

          Copy-Item .\$ARTIFACT_FILE .\$ARTIFACT_SRC
          dir AIEBU-*.zip

          echo "--> Vars used for Jfrog CLI"
          echo "    BRANCH=$BRANCH"
          echo "    DATE=$DATE"
          echo "    ARTIFACT_SRC=$ARTIFACT_SRC"
          echo "    ARTIFACT_DEST=$ARTIFACT_DEST"

          echo "--> Uploading to Artifactory:"
          jf rt upload $ARTIFACT_SRC $ARTIFACT_DEST `
            --insecure-tls=true `
            --flat 
          echo "    Artifact location:"
          echo "    https://xcoartifactory/ui/native/$ARTIFACT_DEST"          

          echo "--> Uploading to LATEST"
          $ARTIFACT_LATEST="/xrt-ipu-dev-local/$BRANCH/win/LATEST/$ARTIFACT_FILE"
          jf rt upload $ARTIFACT_SRC $ARTIFACT_LATEST `
            --insecure-tls=true `
            --flat 
          echo "    LATEST artifact location:"
          echo "    https://xcoartifactory/ui/native/$ARTIFACT_LATEST"      